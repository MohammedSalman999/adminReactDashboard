"use client";

import { useState, useEffect, useCallback } from "react";
import { useNavigate } from "react-router-dom";
import axios from "axios";
import { motion } from "framer-motion";

import { ModeToggle } from "@/components/mode-toggle";
import { AppSidebar } from "@/components/sidebar/app-sidebar";
import {
  SidebarInset,
  SidebarProvider,
  SidebarTrigger,
} from "@/components/ui/sidebar";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";

import TailwindLoadingSpinner from "@/components/TailwindLoadingSpinner";
import TaskChart from "@/components/TaskChart";

const cardVariants = {
  hidden: { opacity: 0, scale: 0.8 },
  visible: {
    opacity: 1,
    scale: 1,
    transition: { duration: 0.5 },
  },
};

const AnimatedNumber = ({ value }) => {
  return (
    <motion.span
      initial={{ opacity: 0, y: 30 }}
      animate={{ opacity: 1, y: 0 }}
      transition={{ duration: 0.5 }}
    >
      {value}
    </motion.span>
  );
};

export default function AdminDashBoardPage() {
  const [dashboardData, setDashboardData] = useState(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);
  const navigate = useNavigate();

  const fetchDashboardData = useCallback(async () => {
    const storedUser = localStorage.getItem("user");
    const accessToken = localStorage.getItem("accessToken");

    if (!storedUser || !accessToken) {
      navigate("/login");
      return;
    }

    const user = JSON.parse(storedUser);

    try {
      setLoading(true);
      const response = await axios.get(
        `http://localhost:5000/api/admin/${user.id}`,
        {
          headers: {
            Authorization: `Bearer ${accessToken}`,
          },
        }
      );
      setDashboardData(response.data);
      setError(null);
    } catch (error) {
      console.error("Error fetching dashboard data:", error);
      setError("Failed to fetch dashboard data. Please try again.");
      if (error.response && error.response.status === 401) {
        localStorage.removeItem("user");
        localStorage.removeItem("accessToken");
        navigate("/login");
      }
    } finally {
      setLoading(false);
    }
  }, [navigate]);

  useEffect(() => {
    fetchDashboardData();
    const interval = setInterval(fetchDashboardData, 30000);
    return () => clearInterval(interval);
  }, [fetchDashboardData]);

  if (loading) {
    return <TailwindLoadingSpinner message="Loading Admin's Dashboard ..." />;
  }

  if (error) {
    return <div className="text-red-500 text-center mt-8">{error}</div>;
  }

  if (!dashboardData) {
    return <div className="text-center mt-8">No data available</div>;
  }

  return (
    <SidebarProvider>
      <AppSidebar />
      <SidebarInset>
        <div className="flex flex-col min-h-screen bg-gray-50 dark:bg-gray-900">
          <header className="border-b bg-white dark:bg-gray-800 shadow-sm">
            <div className="flex h-16 items-center px-4">
              <SidebarTrigger className="mr-2" />
              <span className="font-semibold">
                Welcome to the Admin&apos;s Dashboard
              </span>
              <div className="ml-auto flex items-center space-x-4">
                <ModeToggle />
              </div>
            </div>
          </header>
          <main className="flex-1 space-y-6 p-8">
            <motion.div
              className="grid gap-6 grid-cols-1 sm:grid-cols-2 lg:grid-cols-3"
              initial="hidden"
              animate="visible"
              variants={{
                visible: {
                  transition: {
                    staggerChildren: 0.1,
                  },
                },
              }}
            >
              <motion.div variants={cardVariants}>
                <Card className="bg-gradient-to-br from-blue-500 to-purple-600 shadow-lg">
                  <CardHeader className="pb-2">
                    <CardTitle className="text-md font-medium text-white">
                      Total Users
                    </CardTitle>
                  </CardHeader>
                  <CardContent>
                    <div className="text-2xl font-bold text-white">
                      <AnimatedNumber value={dashboardData.totalUsers} />
                    </div>
                  </CardContent>
                </Card>
              </motion.div>
              <motion.div variants={cardVariants}>
                <Card className="bg-gradient-to-br from-yellow-400 to-orange-500 shadow-lg">
                  <CardHeader className="pb-2">
                    <CardTitle className="text-md font-medium text-white">
                      Total Pending Tasks
                    </CardTitle>
                  </CardHeader>
                  <CardContent>
                    <div className="text-2xl font-bold text-white">
                      <AnimatedNumber value={dashboardData.totalPendingTasks} />
                    </div>
                  </CardContent>
                </Card>
              </motion.div>
              <motion.div variants={cardVariants}>
                <Card className="bg-gradient-to-br from-green-400 to-emerald-600 shadow-lg">
                  <CardHeader className="pb-2">
                    <CardTitle className="text-md font-medium text-white">
                      Total Completed Tasks
                    </CardTitle>
                  </CardHeader>
                  <CardContent>
                    <div className="text-2xl font-bold text-white">
                      <AnimatedNumber
                        value={dashboardData.totalCompletedTasks}
                      />
                    </div>
                  </CardContent>
                </Card>
              </motion.div>
            </motion.div>
            <motion.div
              initial={{ opacity: 0, y: 20 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ delay: 0.3, duration: 0.5 }}
            >
              <TaskChart
                data={dashboardData.monthlyPerformance}
                title="Monthly Task Performance"
                description="Overview of tasks over the last 6 months"
              />
            </motion.div>
          </main>
        </div>
      </SidebarInset>
    </SidebarProvider>
  );
}
